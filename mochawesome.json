{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2022-09-22T15:47:28.606Z",
    "end": "2022-09-22T15:47:49.475Z",
    "duration": 14978,
    "testsRegistered": 3,
    "passPercent": 66.66666666666667,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "67339b03-b152-49c6-aeed-eac025453b76",
      "title": "",
      "fullFile": "cypress/integration/automation-test-store/alias-invoke.js",
      "file": "cypress/integration/automation-test-store/alias-invoke.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "96c2e142-eb30-4052-8ed6-2cf8c0b8d933",
          "title": "Alias and invoke",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate a specific hair care product",
              "fullTitle": "Alias and invoke Validate a specific hair care product",
              "timedOut": null,
              "duration": 8599,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"a[href*='product/category&path=']\").contains(\"Hair Care\").click(); //INVOKE - invoca um metodo Jquery\ncy.get(\".fixed_wrapper .prdocutname\").eq(0).invoke('text').as('productThumbnail'); //be.gt comando para validar se é maior que\ncy.get('@productThumbnail').its('length').should('be.gt', 5);\ncy.get('@productThumbnail').should('include', 'Seaweed Conditioner');",
              "err": {},
              "uuid": "67541699-c35f-4b9e-948b-c54fd4099928",
              "parentUUID": "96c2e142-eb30-4052-8ed6-2cf8c0b8d933",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate  product thumbnail",
              "fullTitle": "Alias and invoke Validate  product thumbnail",
              "timedOut": null,
              "duration": 1529,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\".thumbnail\").as('productThumbnail');\ncy.get('@productThumbnail').should('have.length', 16); //validando atributo title se contem o valor 'add to cart'\ncy.get('@productThumbnail').find('.productcart').invoke('attr', 'title').should('include', 'Add to Cart');\ncy.get('@productThumbnail').eq(2).find('.productcart').invoke('attr', 'title').should('include', 'Add to Cart');",
              "err": {},
              "uuid": "a2820396-20ba-4fa5-baa2-11c08dbcc190",
              "parentUUID": "96c2e142-eb30-4052-8ed6-2cf8c0b8d933",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "calculate-total-of-normal-and-sale-products",
              "fullTitle": "Alias and invoke calculate-total-of-normal-and-sale-products",
              "timedOut": null,
              "duration": 4850,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "\"assets/automation-test-store/alias-invoke.js/Alias and invoke -- calculate-total-of-normal-and-sale-products (failed).png\"",
              "code": "cy.visit(\"https://automationteststore.com/\"); //usando cypress\ncy.get(\".thumbnail\").as('productThumbnail'); //foreach pegando todos os produtos, apos pegando todas classes de preço e logando\ncy.log('Using just Cypress');\ncy.get('@productThumbnail').find('.oneprice').each(($el, index, $list) => {\n  cy.log($el.text());\n}); //usando jquery para fazer o log de todos os preços e somatória \ncy.get(\".thumbnail\").find('.oneprice').invoke('text').as('itemPrice');\ncy.get(\".thumbnail\").find('.pricenew').invoke('text').as('saleItemPrice');\nvar itensTotal = 0;\ncy.get('@itemPrice').then($linkText => {\n  var itensPriceTotal = 0;\n  var itemPrice = $linkText.split('$');\n  var i;\n  for (i = 0; i < itemPrice.length; i++) {\n    cy.log(itemPrice[i]);\n    itensPriceTotal += Number(itemPrice[i]);\n  }\n  itensTotal += itensPriceTotal;\n  cy.log(\"Non sale price items total: \" + itensPriceTotal);\n});\ncy.get('@saleItemPrice').then($linkText => {\n  var saleItensPrice = 0;\n  var saleItemPrice = $linkText.split('$');\n  var i;\n  for (i = 0; i < saleItemPrice.length; i++) {\n    cy.log(saleItemPrice[i]);\n    saleItensPrice += Number(saleItemPrice[i]);\n  }\n  itensTotal += saleItensPrice;\n  cy.log(\"Sale price items total: \" + saleItensPrice);\n}).then(() => {\n  cy.log(\"The total price of all products: \" + itensTotal);\n  expect(itensTotal).to.equal(662.5);\n});",
              "err": {
                "message": "AssertionError: expected 673.5 to equal 662.5",
                "estack": "AssertionError: expected 673.5 to equal 662.5\n    at Context.eval (https://automationteststore.com/__cypress/tests?p=cypress\\integration\\automation-test-store\\alias-invoke.js:158:29)",
                "diff": "- 673.5\n+ 662.5\n"
              },
              "uuid": "c00f4303-811f-4b13-801c-dc23cafb7379",
              "parentUUID": "96c2e142-eb30-4052-8ed6-2cf8c0b8d933",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "67541699-c35f-4b9e-948b-c54fd4099928",
            "a2820396-20ba-4fa5-baa2-11c08dbcc190"
          ],
          "failures": [
            "c00f4303-811f-4b13-801c-dc23cafb7379"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14978,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}